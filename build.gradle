apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.google.protobuf'

version = '2.0'




task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'TraceRunner',
                'Implementation-Version': 2.0,
                'Main-Class': 'edu.colorado.plv.TraceRunner'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
repositories{
    mavenCentral()
}
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        //println("${System.properties['java.home']}/../lib/tools.jar")
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.7.0'

    }


}
dependencies {
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    compile files("${System.properties['java.home']}/../lib/tools.jar")
    compile 'com.google.protobuf:protobuf-java:2.6.1'

}



sourceSets {
    main {
        proto {
            srcDir 'src/main/protobuf'
            srcDir 'build/generated/**'
            include '**/*.protodevel'
        }
    }
}
idea {
    module {
       buildDir.listFiles({d,f->f != 'generated'} as FilenameFilter).each {excludeDirs += it} //2
       sourceDirs += file(new File(buildDir, 'generated/source/proto/main/java'))
       excludeDirs -= file(buildDir) //1
    }
}

tasks.withType(JavaCompile) {
    // this subproject requires -parameters option
    options.compilerArgs << '-Xlint:unchecked'
}

       //generatedSourceDirs = file('build/generated/source/proto/main/java')
//       downloadJavadoc = true
//       downloadSources = true
//}
