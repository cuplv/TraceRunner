// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg



@SerialVersionUID(0L)
final case class TraceMsgContainer(
    msg: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[TraceMsgContainer] with com.trueaccord.lenses.Updatable[TraceMsgContainer] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(msg.serializedSize) + msg.serializedSize
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      _output__.writeTag(1, 2)
      _output__.writeUInt32NoTag(msg.serializedSize)
      msg.writeTo(_output__)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer = {
      var __msg = this.msg
      var __requiredFields0: Long = 0x1L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __msg = _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __msg)
            __requiredFields0 &= 0xfffffffffffffffeL
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer(
          msg = __msg
      )
    }
    def withMsg(__v: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg): TraceMsgContainer = copy(msg = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => msg
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => msg.toPMessage
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer
}

object TraceMsgContainer extends com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer(
      __fieldsMap(__fields.get(0)).asInstanceOf[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg]
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = TracemsgProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = TracemsgProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => __out = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer(
    msg = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.defaultInstance
  )
  /** Defines a single message sent by the instrumented App
    * The message can be of several types: AppMsg, CallinMsg,
    * CallbackMsg.
    *
    * @param type
    *   Identifies the type of the message 
    * @param messageId
    *   Defines the position of the message in the trace 
    * @param threadId
    *   id of the thread on which the message was recorded 
    */
  @SerialVersionUID(0L)
  final case class TraceMsg(
      `type`: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.MsgType,
      messageId: Long,
      threadId: Long,
      app: scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg] = None,
      isActivityThread: Boolean,
      oneofMessage: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.Empty
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[TraceMsg] with com.trueaccord.lenses.Updatable[TraceMsg] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, `type`.value)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(2, messageId)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(3, threadId)
        if (app.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(app.get.serializedSize) + app.get.serializedSize }
        if (oneofMessage.callinEntry.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(oneofMessage.callinEntry.get.serializedSize) + oneofMessage.callinEntry.get.serializedSize }
        if (oneofMessage.callinExit.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(oneofMessage.callinExit.get.serializedSize) + oneofMessage.callinExit.get.serializedSize }
        if (oneofMessage.callinException.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(oneofMessage.callinException.get.serializedSize) + oneofMessage.callinException.get.serializedSize }
        if (oneofMessage.callbackEntry.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(oneofMessage.callbackEntry.get.serializedSize) + oneofMessage.callbackEntry.get.serializedSize }
        if (oneofMessage.callbackExit.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(oneofMessage.callbackExit.get.serializedSize) + oneofMessage.callbackExit.get.serializedSize }
        if (oneofMessage.callbackException.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(oneofMessage.callbackException.get.serializedSize) + oneofMessage.callbackException.get.serializedSize }
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(11, isActivityThread)
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeEnum(1, `type`.value)
        _output__.writeUInt64(2, messageId)
        _output__.writeUInt64(3, threadId)
        app.foreach { __v =>
          _output__.writeTag(4, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        oneofMessage.callinEntry.foreach { __v =>
          _output__.writeTag(5, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        oneofMessage.callinExit.foreach { __v =>
          _output__.writeTag(6, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        oneofMessage.callinException.foreach { __v =>
          _output__.writeTag(7, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        oneofMessage.callbackEntry.foreach { __v =>
          _output__.writeTag(8, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        oneofMessage.callbackExit.foreach { __v =>
          _output__.writeTag(9, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        oneofMessage.callbackException.foreach { __v =>
          _output__.writeTag(10, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        _output__.writeBool(11, isActivityThread)
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg = {
        var __type = this.`type`
        var __messageId = this.messageId
        var __threadId = this.threadId
        var __app = this.app
        var __isActivityThread = this.isActivityThread
        var __requiredFields0: Long = 0xfL
        var __oneofMessage = this.oneofMessage
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __type = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.MsgType.fromValue(_input__.readEnum())
              __requiredFields0 &= 0xfffffffffffffffeL
            case 16 =>
              __messageId = _input__.readUInt64()
              __requiredFields0 &= 0xfffffffffffffffdL
            case 24 =>
              __threadId = _input__.readUInt64()
              __requiredFields0 &= 0xfffffffffffffffbL
            case 34 =>
              __app = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __app.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg.defaultInstance)))
            case 42 =>
              __oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallinEntry(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, oneofMessage.callinEntry.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg.defaultInstance)))
            case 50 =>
              __oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallinExit(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, oneofMessage.callinExit.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg.defaultInstance)))
            case 58 =>
              __oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallinException(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, oneofMessage.callinException.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg.defaultInstance)))
            case 66 =>
              __oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallbackEntry(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, oneofMessage.callbackEntry.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg.defaultInstance)))
            case 74 =>
              __oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallbackExit(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, oneofMessage.callbackExit.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg.defaultInstance)))
            case 82 =>
              __oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallbackException(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, oneofMessage.callbackException.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg.defaultInstance)))
            case 88 =>
              __isActivityThread = _input__.readBool()
              __requiredFields0 &= 0xfffffffffffffff7L
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg(
            `type` = __type,
            messageId = __messageId,
            threadId = __threadId,
            app = __app,
            isActivityThread = __isActivityThread,
            oneofMessage = __oneofMessage
        )
      }
      def withType(__v: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.MsgType): TraceMsg = copy(`type` = __v)
      def withMessageId(__v: Long): TraceMsg = copy(messageId = __v)
      def withThreadId(__v: Long): TraceMsg = copy(threadId = __v)
      def getApp: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg = app.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg.defaultInstance)
      def clearApp: TraceMsg = copy(app = None)
      def withApp(__v: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg): TraceMsg = copy(app = Some(__v))
      def getCallinEntry: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg = oneofMessage.callinEntry.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg.defaultInstance)
      def withCallinEntry(__v: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg): TraceMsg = copy(oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallinEntry(__v))
      def getCallinExit: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg = oneofMessage.callinExit.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg.defaultInstance)
      def withCallinExit(__v: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg): TraceMsg = copy(oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallinExit(__v))
      def getCallinException: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg = oneofMessage.callinException.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg.defaultInstance)
      def withCallinException(__v: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg): TraceMsg = copy(oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallinException(__v))
      def getCallbackEntry: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg = oneofMessage.callbackEntry.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg.defaultInstance)
      def withCallbackEntry(__v: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg): TraceMsg = copy(oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallbackEntry(__v))
      def getCallbackExit: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg = oneofMessage.callbackExit.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg.defaultInstance)
      def withCallbackExit(__v: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg): TraceMsg = copy(oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallbackExit(__v))
      def getCallbackException: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg = oneofMessage.callbackException.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg.defaultInstance)
      def withCallbackException(__v: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg): TraceMsg = copy(oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallbackException(__v))
      def withIsActivityThread(__v: Boolean): TraceMsg = copy(isActivityThread = __v)
      def clearOneofMessage: TraceMsg = copy(oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.Empty)
      def withOneofMessage(__v: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage): TraceMsg = copy(oneofMessage = __v)
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => `type`.javaValueDescriptor
          case 2 => messageId
          case 3 => threadId
          case 4 => app.orNull
          case 5 => oneofMessage.callinEntry.orNull
          case 6 => oneofMessage.callinExit.orNull
          case 7 => oneofMessage.callinException.orNull
          case 8 => oneofMessage.callbackEntry.orNull
          case 9 => oneofMessage.callbackExit.orNull
          case 10 => oneofMessage.callbackException.orNull
          case 11 => isActivityThread
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PEnum(`type`.scalaValueDescriptor)
          case 2 => _root_.scalapb.descriptors.PLong(messageId)
          case 3 => _root_.scalapb.descriptors.PLong(threadId)
          case 4 => app.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 5 => oneofMessage.callinEntry.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 6 => oneofMessage.callinExit.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 7 => oneofMessage.callinException.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 8 => oneofMessage.callbackEntry.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 9 => oneofMessage.callbackExit.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 10 => oneofMessage.callbackException.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 11 => _root_.scalapb.descriptors.PBoolean(isActivityThread)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg
  }
  
  object TraceMsg extends com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg(
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.MsgType.fromValue(__fieldsMap(__fields.get(0)).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
        __fieldsMap(__fields.get(1)).asInstanceOf[Long],
        __fieldsMap(__fields.get(2)).asInstanceOf[Long],
        __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg]],
        __fieldsMap(__fields.get(10)).asInstanceOf[Boolean],
        oneofMessage = __fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg]].map(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallinEntry)
    .orElse[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage](__fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg]].map(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallinExit))
    .orElse[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage](__fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg]].map(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallinException))
    .orElse[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage](__fieldsMap.get(__fields.get(7)).asInstanceOf[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg]].map(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallbackEntry))
    .orElse[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage](__fieldsMap.get(__fields.get(8)).asInstanceOf[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg]].map(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallbackExit))
    .orElse[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage](__fieldsMap.get(__fields.get(9)).asInstanceOf[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg]].map(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallbackException))
    .getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.Empty)
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg(
          edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.MsgType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.scalapb.descriptors.EnumValueDescriptor].number),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[Long],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).get.as[Long],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).get.as[Boolean],
          oneofMessage = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg]]).map(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallinEntry)
    .orElse[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage](__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg]]).map(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallinExit))
    .orElse[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage](__fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg]]).map(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallinException))
    .orElse[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage](__fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg]]).map(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallbackEntry))
    .orElse[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage](__fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg]]).map(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallbackExit))
    .orElse[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage](__fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg]]).map(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallbackException))
    .getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.Empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.javaDescriptor.getNestedTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 4 => __out = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg
        case 5 => __out = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg
        case 6 => __out = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg
        case 7 => __out = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg
        case 8 => __out = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg
        case 9 => __out = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg
        case 10 => __out = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.MsgType
      }
    }
    lazy val defaultInstance = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg(
      `type` = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.MsgType.APP,
      messageId = 0L,
      threadId = 0L,
      isActivityThread = false
    )
    sealed trait MsgType extends _root_.com.trueaccord.scalapb.GeneratedEnum {
      type EnumType = MsgType
      def isApp: Boolean = false
      def isCallinEntry: Boolean = false
      def isCallinExit: Boolean = false
      def isCallinExepion: Boolean = false
      def isCallbackEntry: Boolean = false
      def isCallbackExit: Boolean = false
      def isCallbackException: Boolean = false
      def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[MsgType] = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.MsgType
    }
    
    object MsgType extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[MsgType] {
      implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[MsgType] = this
      @SerialVersionUID(0L)
      case object APP extends MsgType {
        val value = 1
        val index = 0
        val name = "APP"
        override def isApp: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object CALLIN_ENTRY extends MsgType {
        val value = 2
        val index = 1
        val name = "CALLIN_ENTRY"
        override def isCallinEntry: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object CALLIN_EXIT extends MsgType {
        val value = 3
        val index = 2
        val name = "CALLIN_EXIT"
        override def isCallinExit: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object CALLIN_EXEPION extends MsgType {
        val value = 4
        val index = 3
        val name = "CALLIN_EXEPION"
        override def isCallinExepion: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object CALLBACK_ENTRY extends MsgType {
        val value = 5
        val index = 4
        val name = "CALLBACK_ENTRY"
        override def isCallbackEntry: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object CALLBACK_EXIT extends MsgType {
        val value = 6
        val index = 5
        val name = "CALLBACK_EXIT"
        override def isCallbackExit: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object CALLBACK_EXCEPTION extends MsgType {
        val value = 7
        val index = 6
        val name = "CALLBACK_EXCEPTION"
        override def isCallbackException: Boolean = true
      }
      
      @SerialVersionUID(0L)
      case class Unrecognized(value: Int) extends MsgType with _root_.com.trueaccord.scalapb.UnrecognizedEnum
      
      lazy val values = scala.collection.Seq(APP, CALLIN_ENTRY, CALLIN_EXIT, CALLIN_EXEPION, CALLBACK_ENTRY, CALLBACK_EXIT, CALLBACK_EXCEPTION)
      def fromValue(value: Int): MsgType = value match {
        case 1 => APP
        case 2 => CALLIN_ENTRY
        case 3 => CALLIN_EXIT
        case 4 => CALLIN_EXEPION
        case 5 => CALLBACK_ENTRY
        case 6 => CALLBACK_EXIT
        case 7 => CALLBACK_EXCEPTION
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.javaDescriptor.getEnumTypes.get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.scalaDescriptor.enums(0)
    }
    sealed trait OneofMessage extends _root_.com.trueaccord.scalapb.GeneratedOneof {
      def isEmpty: Boolean = false
      def isDefined: Boolean = true
      def isCallinEntry: Boolean = false
      def isCallinExit: Boolean = false
      def isCallinException: Boolean = false
      def isCallbackEntry: Boolean = false
      def isCallbackExit: Boolean = false
      def isCallbackException: Boolean = false
      def callinEntry: scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg] = None
      def callinExit: scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg] = None
      def callinException: scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg] = None
      def callbackEntry: scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg] = None
      def callbackExit: scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg] = None
      def callbackException: scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg] = None
    }
    object OneofMessage extends {
      @SerialVersionUID(0L)
      case object Empty extends edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage {
        override def isEmpty: Boolean = true
        override def isDefined: Boolean = false
        override def number: Int = 0
        override def value: scala.Any = throw new java.util.NoSuchElementException("Empty.value")
      }
    
      @SerialVersionUID(0L)
      case class CallinEntry(value: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg) extends edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage {
        override def isCallinEntry: Boolean = true
        override def callinEntry: scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg] = Some(value)
        override def number: Int = 5
      }
      @SerialVersionUID(0L)
      case class CallinExit(value: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg) extends edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage {
        override def isCallinExit: Boolean = true
        override def callinExit: scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg] = Some(value)
        override def number: Int = 6
      }
      @SerialVersionUID(0L)
      case class CallinException(value: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg) extends edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage {
        override def isCallinException: Boolean = true
        override def callinException: scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg] = Some(value)
        override def number: Int = 7
      }
      @SerialVersionUID(0L)
      case class CallbackEntry(value: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg) extends edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage {
        override def isCallbackEntry: Boolean = true
        override def callbackEntry: scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg] = Some(value)
        override def number: Int = 8
      }
      @SerialVersionUID(0L)
      case class CallbackExit(value: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg) extends edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage {
        override def isCallbackExit: Boolean = true
        override def callbackExit: scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg] = Some(value)
        override def number: Int = 9
      }
      @SerialVersionUID(0L)
      case class CallbackException(value: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg) extends edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage {
        override def isCallbackException: Boolean = true
        override def callbackException: scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg] = Some(value)
        override def number: Int = 10
      }
    }
    implicit class TraceMsgLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg](_l) {
      def `type`: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.MsgType] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
      def messageId: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.messageId)((c_, f_) => c_.copy(messageId = f_))
      def threadId: _root_.com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.threadId)((c_, f_) => c_.copy(threadId = f_))
      def app: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg] = field(_.getApp)((c_, f_) => c_.copy(app = Some(f_)))
      def optionalApp: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg]] = field(_.app)((c_, f_) => c_.copy(app = f_))
      def callinEntry: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg] = field(_.getCallinEntry)((c_, f_) => c_.copy(oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallinEntry(f_)))
      def callinExit: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg] = field(_.getCallinExit)((c_, f_) => c_.copy(oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallinExit(f_)))
      def callinException: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg] = field(_.getCallinException)((c_, f_) => c_.copy(oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallinException(f_)))
      def callbackEntry: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg] = field(_.getCallbackEntry)((c_, f_) => c_.copy(oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallbackEntry(f_)))
      def callbackExit: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg] = field(_.getCallbackExit)((c_, f_) => c_.copy(oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallbackExit(f_)))
      def callbackException: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg] = field(_.getCallbackException)((c_, f_) => c_.copy(oneofMessage = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage.CallbackException(f_)))
      def isActivityThread: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.isActivityThread)((c_, f_) => c_.copy(isActivityThread = f_))
      def oneofMessage: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg.OneofMessage] = field(_.oneofMessage)((c_, f_) => c_.copy(oneofMessage = f_))
    }
    final val TYPE_FIELD_NUMBER = 1
    final val MESSAGE_ID_FIELD_NUMBER = 2
    final val THREAD_ID_FIELD_NUMBER = 3
    final val APP_FIELD_NUMBER = 4
    final val CALLINENTRY_FIELD_NUMBER = 5
    final val CALLINEXIT_FIELD_NUMBER = 6
    final val CALLINEXCEPTION_FIELD_NUMBER = 7
    final val CALLBACKENTRY_FIELD_NUMBER = 8
    final val CALLBACKEXIT_FIELD_NUMBER = 9
    final val CALLBACKEXCEPTION_FIELD_NUMBER = 10
    final val IS_ACTIVITY_THREAD_FIELD_NUMBER = 11
  }
  
  /** Defines the information about the instrumented app. 
    */
  @SerialVersionUID(0L)
  final case class AppMsg(
      appName: scala.Option[String] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[AppMsg] with com.trueaccord.lenses.Updatable[AppMsg] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        if (appName.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, appName.get) }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        appName.foreach { __v =>
          _output__.writeString(1, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg = {
        var __appName = this.appName
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __appName = Some(_input__.readString())
            case tag => _input__.skipField(tag)
          }
        }
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg(
            appName = __appName
        )
      }
      def getAppName: String = appName.getOrElse("")
      def clearAppName: AppMsg = copy(appName = None)
      def withAppName(__v: String): AppMsg = copy(appName = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => appName.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => appName.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg
  }
  
  object AppMsg extends com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg(
        __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[String]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[String]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.javaDescriptor.getNestedTypes.get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg(
    )
    implicit class AppMsgLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.AppMsg](_l) {
      def appName: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getAppName)((c_, f_) => c_.copy(appName = Some(f_)))
      def optionalAppName: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.appName)((c_, f_) => c_.copy(appName = f_))
    }
    final val APP_NAME_FIELD_NUMBER = 1
  }
  
  /** Msg that contains the information of a callin invocation 
    *
    * @param className
    *   signature of the callin TODO: change this to class
    * @param methodName
    *   name of the invoked callin 
    * @param paramList
    *   list of parameters of the callin 
    * @param caller
    *   object that calls this callin - document better 
    */
  @SerialVersionUID(0L)
  final case class CallinEntryMsg(
      className: String,
      methodName: String,
      paramList: _root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg] = _root_.scala.collection.Seq.empty,
      caller: scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[CallinEntryMsg] with com.trueaccord.lenses.Updatable[CallinEntryMsg] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, className)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, methodName)
        paramList.foreach(paramList => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(paramList.serializedSize) + paramList.serializedSize)
        if (caller.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(caller.get.serializedSize) + caller.get.serializedSize }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeString(1, className)
        _output__.writeString(2, methodName)
        paramList.foreach { __v =>
          _output__.writeTag(3, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        caller.foreach { __v =>
          _output__.writeTag(4, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg = {
        var __className = this.className
        var __methodName = this.methodName
        val __paramList = (_root_.scala.collection.immutable.Vector.newBuilder[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg] ++= this.paramList)
        var __caller = this.caller
        var __requiredFields0: Long = 0x3L
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __className = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffeL
            case 18 =>
              __methodName = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffdL
            case 26 =>
              __paramList += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg.defaultInstance)
            case 34 =>
              __caller = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __caller.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg.defaultInstance)))
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg(
            className = __className,
            methodName = __methodName,
            paramList = __paramList.result(),
            caller = __caller
        )
      }
      def withClassName(__v: String): CallinEntryMsg = copy(className = __v)
      def withMethodName(__v: String): CallinEntryMsg = copy(methodName = __v)
      def clearParamList = copy(paramList = _root_.scala.collection.Seq.empty)
      def addParamList(__vs: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg*): CallinEntryMsg = addAllParamList(__vs)
      def addAllParamList(__vs: TraversableOnce[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]): CallinEntryMsg = copy(paramList = paramList ++ __vs)
      def withParamList(__v: _root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]): CallinEntryMsg = copy(paramList = __v)
      def getCaller: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg = caller.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg.defaultInstance)
      def clearCaller: CallinEntryMsg = copy(caller = None)
      def withCaller(__v: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg): CallinEntryMsg = copy(caller = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => className
          case 2 => methodName
          case 3 => paramList
          case 4 => caller.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(className)
          case 2 => _root_.scalapb.descriptors.PString(methodName)
          case 3 => _root_.scalapb.descriptors.PRepeated(paramList.map(_.toPMessage)(_root_.scala.collection.breakOut))
          case 4 => caller.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg
  }
  
  object CallinEntryMsg extends com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg(
        __fieldsMap(__fields.get(0)).asInstanceOf[String],
        __fieldsMap(__fields.get(1)).asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(2), Nil).asInstanceOf[_root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]],
        __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.javaDescriptor.getNestedTypes.get(2)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.scalaDescriptor.nestedMessages(2)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 3 => __out = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg
        case 4 => __out = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg(
      className = "",
      methodName = ""
    )
    implicit class CallinEntryMsgLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinEntryMsg](_l) {
      def className: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.className)((c_, f_) => c_.copy(className = f_))
      def methodName: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.methodName)((c_, f_) => c_.copy(methodName = f_))
      def paramList: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]] = field(_.paramList)((c_, f_) => c_.copy(paramList = f_))
      def caller: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg] = field(_.getCaller)((c_, f_) => c_.copy(caller = Some(f_)))
      def optionalCaller: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]] = field(_.caller)((c_, f_) => c_.copy(caller = f_))
    }
    final val CLASS_NAME_FIELD_NUMBER = 1
    final val METHOD_NAME_FIELD_NUMBER = 2
    final val PARAM_LIST_FIELD_NUMBER = 3
    final val CALLER_FIELD_NUMBER = 4
  }
  
  /** @param className
    *   signature of the callin 
    * @param methodName
    *   name of the invoked callin 
    * @param returnValue
    *   return value 
    */
  @SerialVersionUID(0L)
  final case class CallinExitMsg(
      className: String,
      methodName: String,
      returnValue: scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[CallinExitMsg] with com.trueaccord.lenses.Updatable[CallinExitMsg] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, className)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, methodName)
        if (returnValue.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(returnValue.get.serializedSize) + returnValue.get.serializedSize }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeString(1, className)
        _output__.writeString(2, methodName)
        returnValue.foreach { __v =>
          _output__.writeTag(3, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg = {
        var __className = this.className
        var __methodName = this.methodName
        var __returnValue = this.returnValue
        var __requiredFields0: Long = 0x3L
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __className = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffeL
            case 18 =>
              __methodName = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffdL
            case 26 =>
              __returnValue = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __returnValue.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg.defaultInstance)))
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg(
            className = __className,
            methodName = __methodName,
            returnValue = __returnValue
        )
      }
      def withClassName(__v: String): CallinExitMsg = copy(className = __v)
      def withMethodName(__v: String): CallinExitMsg = copy(methodName = __v)
      def getReturnValue: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg = returnValue.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg.defaultInstance)
      def clearReturnValue: CallinExitMsg = copy(returnValue = None)
      def withReturnValue(__v: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg): CallinExitMsg = copy(returnValue = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => className
          case 2 => methodName
          case 3 => returnValue.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(className)
          case 2 => _root_.scalapb.descriptors.PString(methodName)
          case 3 => returnValue.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg
  }
  
  object CallinExitMsg extends com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg(
        __fieldsMap(__fields.get(0)).asInstanceOf[String],
        __fieldsMap(__fields.get(1)).asInstanceOf[String],
        __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.javaDescriptor.getNestedTypes.get(3)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.scalaDescriptor.nestedMessages(3)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 3 => __out = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg(
      className = "",
      methodName = ""
    )
    implicit class CallinExitMsgLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExitMsg](_l) {
      def className: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.className)((c_, f_) => c_.copy(className = f_))
      def methodName: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.methodName)((c_, f_) => c_.copy(methodName = f_))
      def returnValue: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg] = field(_.getReturnValue)((c_, f_) => c_.copy(returnValue = Some(f_)))
      def optionalReturnValue: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]] = field(_.returnValue)((c_, f_) => c_.copy(returnValue = f_))
    }
    final val CLASS_NAME_FIELD_NUMBER = 1
    final val METHOD_NAME_FIELD_NUMBER = 2
    final val RETURN_VALUE_FIELD_NUMBER = 3
  }
  
  @SerialVersionUID(0L)
  final case class CallinExceptionMsg(
      throwingClassName: String,
      throwingMethodName: String,
      `type`: String,
      exceptionMessage: scala.Option[String] = None,
      stackTrace: _root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace] = _root_.scala.collection.Seq.empty
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[CallinExceptionMsg] with com.trueaccord.lenses.Updatable[CallinExceptionMsg] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, throwingClassName)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, throwingMethodName)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, `type`)
        if (exceptionMessage.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, exceptionMessage.get) }
        stackTrace.foreach(stackTrace => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(stackTrace.serializedSize) + stackTrace.serializedSize)
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeString(1, throwingClassName)
        _output__.writeString(2, throwingMethodName)
        _output__.writeString(3, `type`)
        exceptionMessage.foreach { __v =>
          _output__.writeString(4, __v)
        };
        stackTrace.foreach { __v =>
          _output__.writeTag(5, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg = {
        var __throwingClassName = this.throwingClassName
        var __throwingMethodName = this.throwingMethodName
        var __type = this.`type`
        var __exceptionMessage = this.exceptionMessage
        val __stackTrace = (_root_.scala.collection.immutable.Vector.newBuilder[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace] ++= this.stackTrace)
        var __requiredFields0: Long = 0x7L
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __throwingClassName = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffeL
            case 18 =>
              __throwingMethodName = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffdL
            case 26 =>
              __type = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffbL
            case 34 =>
              __exceptionMessage = Some(_input__.readString())
            case 42 =>
              __stackTrace += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace.defaultInstance)
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg(
            throwingClassName = __throwingClassName,
            throwingMethodName = __throwingMethodName,
            `type` = __type,
            exceptionMessage = __exceptionMessage,
            stackTrace = __stackTrace.result()
        )
      }
      def withThrowingClassName(__v: String): CallinExceptionMsg = copy(throwingClassName = __v)
      def withThrowingMethodName(__v: String): CallinExceptionMsg = copy(throwingMethodName = __v)
      def withType(__v: String): CallinExceptionMsg = copy(`type` = __v)
      def getExceptionMessage: String = exceptionMessage.getOrElse("")
      def clearExceptionMessage: CallinExceptionMsg = copy(exceptionMessage = None)
      def withExceptionMessage(__v: String): CallinExceptionMsg = copy(exceptionMessage = Some(__v))
      def clearStackTrace = copy(stackTrace = _root_.scala.collection.Seq.empty)
      def addStackTrace(__vs: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace*): CallinExceptionMsg = addAllStackTrace(__vs)
      def addAllStackTrace(__vs: TraversableOnce[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace]): CallinExceptionMsg = copy(stackTrace = stackTrace ++ __vs)
      def withStackTrace(__v: _root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace]): CallinExceptionMsg = copy(stackTrace = __v)
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => throwingClassName
          case 2 => throwingMethodName
          case 3 => `type`
          case 4 => exceptionMessage.orNull
          case 5 => stackTrace
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(throwingClassName)
          case 2 => _root_.scalapb.descriptors.PString(throwingMethodName)
          case 3 => _root_.scalapb.descriptors.PString(`type`)
          case 4 => exceptionMessage.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 5 => _root_.scalapb.descriptors.PRepeated(stackTrace.map(_.toPMessage)(_root_.scala.collection.breakOut))
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg
  }
  
  object CallinExceptionMsg extends com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg(
        __fieldsMap(__fields.get(0)).asInstanceOf[String],
        __fieldsMap(__fields.get(1)).asInstanceOf[String],
        __fieldsMap(__fields.get(2)).asInstanceOf[String],
        __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[String]],
        __fieldsMap.getOrElse(__fields.get(4), Nil).asInstanceOf[_root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace]]).getOrElse(_root_.scala.collection.Seq.empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.javaDescriptor.getNestedTypes.get(4)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.scalaDescriptor.nestedMessages(4)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 5 => __out = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg(
      throwingClassName = "",
      throwingMethodName = "",
      `type` = ""
    )
    implicit class CallinExceptionMsgLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallinExceptionMsg](_l) {
      def throwingClassName: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.throwingClassName)((c_, f_) => c_.copy(throwingClassName = f_))
      def throwingMethodName: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.throwingMethodName)((c_, f_) => c_.copy(throwingMethodName = f_))
      def `type`: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
      def exceptionMessage: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getExceptionMessage)((c_, f_) => c_.copy(exceptionMessage = Some(f_)))
      def optionalExceptionMessage: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.exceptionMessage)((c_, f_) => c_.copy(exceptionMessage = f_))
      def stackTrace: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace]] = field(_.stackTrace)((c_, f_) => c_.copy(stackTrace = f_))
    }
    final val THROWING_CLASS_NAME_FIELD_NUMBER = 1
    final val THROWING_METHOD_NAME_FIELD_NUMBER = 2
    final val TYPE_FIELD_NUMBER = 3
    final val EXCEPTION_MESSAGE_FIELD_NUMBER = 4
    final val STACK_TRACE_FIELD_NUMBER = 5
  }
  
  @SerialVersionUID(0L)
  final case class FrameworkOverride(
      method: String,
      className: String,
      isInterface: Boolean
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[FrameworkOverride] with com.trueaccord.lenses.Updatable[FrameworkOverride] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, method)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, className)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(3, isInterface)
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeString(1, method)
        _output__.writeString(2, className)
        _output__.writeBool(3, isInterface)
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride = {
        var __method = this.method
        var __className = this.className
        var __isInterface = this.isInterface
        var __requiredFields0: Long = 0x7L
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __method = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffeL
            case 18 =>
              __className = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffdL
            case 24 =>
              __isInterface = _input__.readBool()
              __requiredFields0 &= 0xfffffffffffffffbL
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride(
            method = __method,
            className = __className,
            isInterface = __isInterface
        )
      }
      def withMethod(__v: String): FrameworkOverride = copy(method = __v)
      def withClassName(__v: String): FrameworkOverride = copy(className = __v)
      def withIsInterface(__v: Boolean): FrameworkOverride = copy(isInterface = __v)
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => method
          case 2 => className
          case 3 => isInterface
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(method)
          case 2 => _root_.scalapb.descriptors.PString(className)
          case 3 => _root_.scalapb.descriptors.PBoolean(isInterface)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride
  }
  
  object FrameworkOverride extends com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride(
        __fieldsMap(__fields.get(0)).asInstanceOf[String],
        __fieldsMap(__fields.get(1)).asInstanceOf[String],
        __fieldsMap(__fields.get(2)).asInstanceOf[Boolean]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).get.as[Boolean]
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.javaDescriptor.getNestedTypes.get(5)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.scalaDescriptor.nestedMessages(5)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride(
      method = "",
      className = "",
      isInterface = false
    )
    implicit class FrameworkOverrideLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride](_l) {
      def method: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.method)((c_, f_) => c_.copy(method = f_))
      def className: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.className)((c_, f_) => c_.copy(className = f_))
      def isInterface: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.isInterface)((c_, f_) => c_.copy(isInterface = f_))
    }
    final val METHOD_FIELD_NUMBER = 1
    final val CLASS_NAME_FIELD_NUMBER = 2
    final val IS_INTERFACE_FIELD_NUMBER = 3
  }
  
  @SerialVersionUID(0L)
  final case class CallbackEntryMsg(
      className: String,
      methodName: String,
      paramList: _root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg] = _root_.scala.collection.Seq.empty,
      callbackCallerClass: String,
      callbackCallerMethod: String,
      methodParameterTypes: _root_.scala.collection.Seq[String] = _root_.scala.collection.Seq.empty,
      methodReturnType: String,
      frameworkOverrides: _root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride] = _root_.scala.collection.Seq.empty,
      receiverFirstFrameworkSuper: scala.Option[String] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[CallbackEntryMsg] with com.trueaccord.lenses.Updatable[CallbackEntryMsg] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, className)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, methodName)
        paramList.foreach(paramList => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(paramList.serializedSize) + paramList.serializedSize)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, callbackCallerClass)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, callbackCallerMethod)
        methodParameterTypes.foreach(methodParameterTypes => __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, methodParameterTypes))
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, methodReturnType)
        frameworkOverrides.foreach(frameworkOverrides => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(frameworkOverrides.serializedSize) + frameworkOverrides.serializedSize)
        if (receiverFirstFrameworkSuper.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, receiverFirstFrameworkSuper.get) }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeString(1, className)
        _output__.writeString(2, methodName)
        paramList.foreach { __v =>
          _output__.writeTag(3, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        _output__.writeString(4, callbackCallerClass)
        _output__.writeString(5, callbackCallerMethod)
        methodParameterTypes.foreach { __v =>
          _output__.writeString(7, __v)
        };
        _output__.writeString(8, methodReturnType)
        frameworkOverrides.foreach { __v =>
          _output__.writeTag(9, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        receiverFirstFrameworkSuper.foreach { __v =>
          _output__.writeString(10, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg = {
        var __className = this.className
        var __methodName = this.methodName
        val __paramList = (_root_.scala.collection.immutable.Vector.newBuilder[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg] ++= this.paramList)
        var __callbackCallerClass = this.callbackCallerClass
        var __callbackCallerMethod = this.callbackCallerMethod
        val __methodParameterTypes = (_root_.scala.collection.immutable.Vector.newBuilder[String] ++= this.methodParameterTypes)
        var __methodReturnType = this.methodReturnType
        val __frameworkOverrides = (_root_.scala.collection.immutable.Vector.newBuilder[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride] ++= this.frameworkOverrides)
        var __receiverFirstFrameworkSuper = this.receiverFirstFrameworkSuper
        var __requiredFields0: Long = 0x1fL
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __className = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffeL
            case 18 =>
              __methodName = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffdL
            case 26 =>
              __paramList += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg.defaultInstance)
            case 34 =>
              __callbackCallerClass = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffbL
            case 42 =>
              __callbackCallerMethod = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffff7L
            case 58 =>
              __methodParameterTypes += _input__.readString()
            case 66 =>
              __methodReturnType = _input__.readString()
              __requiredFields0 &= 0xffffffffffffffefL
            case 74 =>
              __frameworkOverrides += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride.defaultInstance)
            case 82 =>
              __receiverFirstFrameworkSuper = Some(_input__.readString())
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg(
            className = __className,
            methodName = __methodName,
            paramList = __paramList.result(),
            callbackCallerClass = __callbackCallerClass,
            callbackCallerMethod = __callbackCallerMethod,
            methodParameterTypes = __methodParameterTypes.result(),
            methodReturnType = __methodReturnType,
            frameworkOverrides = __frameworkOverrides.result(),
            receiverFirstFrameworkSuper = __receiverFirstFrameworkSuper
        )
      }
      def withClassName(__v: String): CallbackEntryMsg = copy(className = __v)
      def withMethodName(__v: String): CallbackEntryMsg = copy(methodName = __v)
      def clearParamList = copy(paramList = _root_.scala.collection.Seq.empty)
      def addParamList(__vs: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg*): CallbackEntryMsg = addAllParamList(__vs)
      def addAllParamList(__vs: TraversableOnce[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]): CallbackEntryMsg = copy(paramList = paramList ++ __vs)
      def withParamList(__v: _root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]): CallbackEntryMsg = copy(paramList = __v)
      def withCallbackCallerClass(__v: String): CallbackEntryMsg = copy(callbackCallerClass = __v)
      def withCallbackCallerMethod(__v: String): CallbackEntryMsg = copy(callbackCallerMethod = __v)
      def clearMethodParameterTypes = copy(methodParameterTypes = _root_.scala.collection.Seq.empty)
      def addMethodParameterTypes(__vs: String*): CallbackEntryMsg = addAllMethodParameterTypes(__vs)
      def addAllMethodParameterTypes(__vs: TraversableOnce[String]): CallbackEntryMsg = copy(methodParameterTypes = methodParameterTypes ++ __vs)
      def withMethodParameterTypes(__v: _root_.scala.collection.Seq[String]): CallbackEntryMsg = copy(methodParameterTypes = __v)
      def withMethodReturnType(__v: String): CallbackEntryMsg = copy(methodReturnType = __v)
      def clearFrameworkOverrides = copy(frameworkOverrides = _root_.scala.collection.Seq.empty)
      def addFrameworkOverrides(__vs: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride*): CallbackEntryMsg = addAllFrameworkOverrides(__vs)
      def addAllFrameworkOverrides(__vs: TraversableOnce[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride]): CallbackEntryMsg = copy(frameworkOverrides = frameworkOverrides ++ __vs)
      def withFrameworkOverrides(__v: _root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride]): CallbackEntryMsg = copy(frameworkOverrides = __v)
      def getReceiverFirstFrameworkSuper: String = receiverFirstFrameworkSuper.getOrElse("")
      def clearReceiverFirstFrameworkSuper: CallbackEntryMsg = copy(receiverFirstFrameworkSuper = None)
      def withReceiverFirstFrameworkSuper(__v: String): CallbackEntryMsg = copy(receiverFirstFrameworkSuper = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => className
          case 2 => methodName
          case 3 => paramList
          case 4 => callbackCallerClass
          case 5 => callbackCallerMethod
          case 7 => methodParameterTypes
          case 8 => methodReturnType
          case 9 => frameworkOverrides
          case 10 => receiverFirstFrameworkSuper.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(className)
          case 2 => _root_.scalapb.descriptors.PString(methodName)
          case 3 => _root_.scalapb.descriptors.PRepeated(paramList.map(_.toPMessage)(_root_.scala.collection.breakOut))
          case 4 => _root_.scalapb.descriptors.PString(callbackCallerClass)
          case 5 => _root_.scalapb.descriptors.PString(callbackCallerMethod)
          case 7 => _root_.scalapb.descriptors.PRepeated(methodParameterTypes.map(_root_.scalapb.descriptors.PString)(_root_.scala.collection.breakOut))
          case 8 => _root_.scalapb.descriptors.PString(methodReturnType)
          case 9 => _root_.scalapb.descriptors.PRepeated(frameworkOverrides.map(_.toPMessage)(_root_.scala.collection.breakOut))
          case 10 => receiverFirstFrameworkSuper.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg
  }
  
  object CallbackEntryMsg extends com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg(
        __fieldsMap(__fields.get(0)).asInstanceOf[String],
        __fieldsMap(__fields.get(1)).asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(2), Nil).asInstanceOf[_root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]],
        __fieldsMap(__fields.get(3)).asInstanceOf[String],
        __fieldsMap(__fields.get(4)).asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(5), Nil).asInstanceOf[_root_.scala.collection.Seq[String]],
        __fieldsMap(__fields.get(6)).asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(7), Nil).asInstanceOf[_root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride]],
        __fieldsMap.get(__fields.get(8)).asInstanceOf[scala.Option[String]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.collection.Seq[String]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[scala.Option[String]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.javaDescriptor.getNestedTypes.get(6)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.scalaDescriptor.nestedMessages(6)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 3 => __out = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg
        case 9 => __out = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg(
      className = "",
      methodName = "",
      callbackCallerClass = "",
      callbackCallerMethod = "",
      methodReturnType = ""
    )
    implicit class CallbackEntryMsgLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackEntryMsg](_l) {
      def className: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.className)((c_, f_) => c_.copy(className = f_))
      def methodName: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.methodName)((c_, f_) => c_.copy(methodName = f_))
      def paramList: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]] = field(_.paramList)((c_, f_) => c_.copy(paramList = f_))
      def callbackCallerClass: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.callbackCallerClass)((c_, f_) => c_.copy(callbackCallerClass = f_))
      def callbackCallerMethod: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.callbackCallerMethod)((c_, f_) => c_.copy(callbackCallerMethod = f_))
      def methodParameterTypes: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[String]] = field(_.methodParameterTypes)((c_, f_) => c_.copy(methodParameterTypes = f_))
      def methodReturnType: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.methodReturnType)((c_, f_) => c_.copy(methodReturnType = f_))
      def frameworkOverrides: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.FrameworkOverride]] = field(_.frameworkOverrides)((c_, f_) => c_.copy(frameworkOverrides = f_))
      def receiverFirstFrameworkSuper: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getReceiverFirstFrameworkSuper)((c_, f_) => c_.copy(receiverFirstFrameworkSuper = Some(f_)))
      def optionalReceiverFirstFrameworkSuper: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.receiverFirstFrameworkSuper)((c_, f_) => c_.copy(receiverFirstFrameworkSuper = f_))
    }
    final val CLASS_NAME_FIELD_NUMBER = 1
    final val METHOD_NAME_FIELD_NUMBER = 2
    final val PARAM_LIST_FIELD_NUMBER = 3
    final val CALLBACK_CALLER_CLASS_FIELD_NUMBER = 4
    final val CALLBACK_CALLER_METHOD_FIELD_NUMBER = 5
    final val METHOD_PARAMETER_TYPES_FIELD_NUMBER = 7
    final val METHOD_RETURNTYPE_FIELD_NUMBER = 8
    final val FRAMEWORK_OVERRIDES_FIELD_NUMBER = 9
    final val RECEIVER_FIRST_FRAMEWORK_SUPER_FIELD_NUMBER = 10
  }
  
  @SerialVersionUID(0L)
  final case class CallbackExitMsg(
      className: String,
      methodName: String,
      returnValue: scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[CallbackExitMsg] with com.trueaccord.lenses.Updatable[CallbackExitMsg] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, className)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, methodName)
        if (returnValue.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(returnValue.get.serializedSize) + returnValue.get.serializedSize }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeString(1, className)
        _output__.writeString(2, methodName)
        returnValue.foreach { __v =>
          _output__.writeTag(3, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg = {
        var __className = this.className
        var __methodName = this.methodName
        var __returnValue = this.returnValue
        var __requiredFields0: Long = 0x3L
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __className = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffeL
            case 18 =>
              __methodName = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffdL
            case 26 =>
              __returnValue = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __returnValue.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg.defaultInstance)))
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg(
            className = __className,
            methodName = __methodName,
            returnValue = __returnValue
        )
      }
      def withClassName(__v: String): CallbackExitMsg = copy(className = __v)
      def withMethodName(__v: String): CallbackExitMsg = copy(methodName = __v)
      def getReturnValue: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg = returnValue.getOrElse(edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg.defaultInstance)
      def clearReturnValue: CallbackExitMsg = copy(returnValue = None)
      def withReturnValue(__v: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg): CallbackExitMsg = copy(returnValue = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => className
          case 2 => methodName
          case 3 => returnValue.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(className)
          case 2 => _root_.scalapb.descriptors.PString(methodName)
          case 3 => returnValue.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg
  }
  
  object CallbackExitMsg extends com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg(
        __fieldsMap(__fields.get(0)).asInstanceOf[String],
        __fieldsMap(__fields.get(1)).asInstanceOf[String],
        __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.javaDescriptor.getNestedTypes.get(7)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.scalaDescriptor.nestedMessages(7)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 3 => __out = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg(
      className = "",
      methodName = ""
    )
    implicit class CallbackExitMsgLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExitMsg](_l) {
      def className: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.className)((c_, f_) => c_.copy(className = f_))
      def methodName: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.methodName)((c_, f_) => c_.copy(methodName = f_))
      def returnValue: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg] = field(_.getReturnValue)((c_, f_) => c_.copy(returnValue = Some(f_)))
      def optionalReturnValue: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]] = field(_.returnValue)((c_, f_) => c_.copy(returnValue = f_))
    }
    final val CLASS_NAME_FIELD_NUMBER = 1
    final val METHOD_NAME_FIELD_NUMBER = 2
    final val RETURN_VALUE_FIELD_NUMBER = 3
  }
  
  /** TODO: is this needed? 
    */
  @SerialVersionUID(0L)
  final case class CallbackExceptionMsg(
      throwingClassName: String,
      throwingMethodName: String,
      `type`: String,
      exceptionMessage: scala.Option[String] = None,
      stackTrace: _root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace] = _root_.scala.collection.Seq.empty
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[CallbackExceptionMsg] with com.trueaccord.lenses.Updatable[CallbackExceptionMsg] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, throwingClassName)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, throwingMethodName)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, `type`)
        if (exceptionMessage.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, exceptionMessage.get) }
        stackTrace.foreach(stackTrace => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(stackTrace.serializedSize) + stackTrace.serializedSize)
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeString(1, throwingClassName)
        _output__.writeString(2, throwingMethodName)
        _output__.writeString(3, `type`)
        exceptionMessage.foreach { __v =>
          _output__.writeString(4, __v)
        };
        stackTrace.foreach { __v =>
          _output__.writeTag(5, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg = {
        var __throwingClassName = this.throwingClassName
        var __throwingMethodName = this.throwingMethodName
        var __type = this.`type`
        var __exceptionMessage = this.exceptionMessage
        val __stackTrace = (_root_.scala.collection.immutable.Vector.newBuilder[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace] ++= this.stackTrace)
        var __requiredFields0: Long = 0x7L
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __throwingClassName = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffeL
            case 18 =>
              __throwingMethodName = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffdL
            case 26 =>
              __type = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffbL
            case 34 =>
              __exceptionMessage = Some(_input__.readString())
            case 42 =>
              __stackTrace += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace.defaultInstance)
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg(
            throwingClassName = __throwingClassName,
            throwingMethodName = __throwingMethodName,
            `type` = __type,
            exceptionMessage = __exceptionMessage,
            stackTrace = __stackTrace.result()
        )
      }
      def withThrowingClassName(__v: String): CallbackExceptionMsg = copy(throwingClassName = __v)
      def withThrowingMethodName(__v: String): CallbackExceptionMsg = copy(throwingMethodName = __v)
      def withType(__v: String): CallbackExceptionMsg = copy(`type` = __v)
      def getExceptionMessage: String = exceptionMessage.getOrElse("")
      def clearExceptionMessage: CallbackExceptionMsg = copy(exceptionMessage = None)
      def withExceptionMessage(__v: String): CallbackExceptionMsg = copy(exceptionMessage = Some(__v))
      def clearStackTrace = copy(stackTrace = _root_.scala.collection.Seq.empty)
      def addStackTrace(__vs: edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace*): CallbackExceptionMsg = addAllStackTrace(__vs)
      def addAllStackTrace(__vs: TraversableOnce[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace]): CallbackExceptionMsg = copy(stackTrace = stackTrace ++ __vs)
      def withStackTrace(__v: _root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace]): CallbackExceptionMsg = copy(stackTrace = __v)
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => throwingClassName
          case 2 => throwingMethodName
          case 3 => `type`
          case 4 => exceptionMessage.orNull
          case 5 => stackTrace
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(throwingClassName)
          case 2 => _root_.scalapb.descriptors.PString(throwingMethodName)
          case 3 => _root_.scalapb.descriptors.PString(`type`)
          case 4 => exceptionMessage.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 5 => _root_.scalapb.descriptors.PRepeated(stackTrace.map(_.toPMessage)(_root_.scala.collection.breakOut))
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg
  }
  
  object CallbackExceptionMsg extends com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg(
        __fieldsMap(__fields.get(0)).asInstanceOf[String],
        __fieldsMap(__fields.get(1)).asInstanceOf[String],
        __fieldsMap(__fields.get(2)).asInstanceOf[String],
        __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[String]],
        __fieldsMap.getOrElse(__fields.get(4), Nil).asInstanceOf[_root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace]]).getOrElse(_root_.scala.collection.Seq.empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.javaDescriptor.getNestedTypes.get(8)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.scalaDescriptor.nestedMessages(8)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 5 => __out = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace
      }
      __out
    }
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg(
      throwingClassName = "",
      throwingMethodName = "",
      `type` = ""
    )
    implicit class CallbackExceptionMsgLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.CallbackExceptionMsg](_l) {
      def throwingClassName: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.throwingClassName)((c_, f_) => c_.copy(throwingClassName = f_))
      def throwingMethodName: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.throwingMethodName)((c_, f_) => c_.copy(throwingMethodName = f_))
      def `type`: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
      def exceptionMessage: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getExceptionMessage)((c_, f_) => c_.copy(exceptionMessage = Some(f_)))
      def optionalExceptionMessage: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.exceptionMessage)((c_, f_) => c_.copy(exceptionMessage = f_))
      def stackTrace: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace]] = field(_.stackTrace)((c_, f_) => c_.copy(stackTrace = f_))
    }
    final val THROWING_CLASS_NAME_FIELD_NUMBER = 1
    final val THROWING_METHOD_NAME_FIELD_NUMBER = 2
    final val TYPE_FIELD_NUMBER = 3
    final val EXCEPTION_MESSAGE_FIELD_NUMBER = 4
    final val STACK_TRACE_FIELD_NUMBER = 5
  }
  
  @SerialVersionUID(0L)
  final case class StackTrace(
      method: String,
      className: String
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[StackTrace] with com.trueaccord.lenses.Updatable[StackTrace] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, method)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, className)
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        _output__.writeString(1, method)
        _output__.writeString(2, className)
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace = {
        var __method = this.method
        var __className = this.className
        var __requiredFields0: Long = 0x3L
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __method = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffeL
            case 18 =>
              __className = _input__.readString()
              __requiredFields0 &= 0xfffffffffffffffdL
            case tag => _input__.skipField(tag)
          }
        }
        if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace(
            method = __method,
            className = __className
        )
      }
      def withMethod(__v: String): StackTrace = copy(method = __v)
      def withClassName(__v: String): StackTrace = copy(className = __v)
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => method
          case 2 => className
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(method)
          case 2 => _root_.scalapb.descriptors.PString(className)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace
  }
  
  object StackTrace extends com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace(
        __fieldsMap(__fields.get(0)).asInstanceOf[String],
        __fieldsMap(__fields.get(1)).asInstanceOf[String]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[String],
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[String]
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.javaDescriptor.getNestedTypes.get(9)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.scalaDescriptor.nestedMessages(9)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace(
      method = "",
      className = ""
    )
    implicit class StackTraceLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.StackTrace](_l) {
      def method: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.method)((c_, f_) => c_.copy(method = f_))
      def className: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.className)((c_, f_) => c_.copy(className = f_))
    }
    final val METHOD_FIELD_NUMBER = 1
    final val CLASS_NAME_FIELD_NUMBER = 2
  }
  
  /** Object used as caller/parameter/return value 
    *
    * @param isNull
    *   is the value null 
    * @param type
    *   type of the value 
    * @param fmwkType
    *   most precise framework type 
    * @param objectId
    *   id of the object 
    * @param value
    *   value of the object 
    */
  @SerialVersionUID(0L)
  final case class ValueMsg(
      isNull: scala.Option[Boolean] = None,
      `type`: scala.Option[String] = None,
      fmwkType: scala.Option[String] = None,
      objectId: scala.Option[String] = None,
      value: scala.Option[String] = None
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ValueMsg] with com.trueaccord.lenses.Updatable[ValueMsg] {
      @transient
      private[this] var __serializedSizeCachedValue: Int = 0
      private[this] def __computeSerializedValue(): Int = {
        var __size = 0
        if (isNull.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(1, isNull.get) }
        if (`type`.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, `type`.get) }
        if (fmwkType.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, fmwkType.get) }
        if (objectId.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, objectId.get) }
        if (value.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, value.get) }
        __size
      }
      final override def serializedSize: Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
        isNull.foreach { __v =>
          _output__.writeBool(1, __v)
        };
        `type`.foreach { __v =>
          _output__.writeString(2, __v)
        };
        fmwkType.foreach { __v =>
          _output__.writeString(3, __v)
        };
        objectId.foreach { __v =>
          _output__.writeString(4, __v)
        };
        value.foreach { __v =>
          _output__.writeString(5, __v)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg = {
        var __isNull = this.isNull
        var __type = this.`type`
        var __fmwkType = this.fmwkType
        var __objectId = this.objectId
        var __value = this.value
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 8 =>
              __isNull = Some(_input__.readBool())
            case 18 =>
              __type = Some(_input__.readString())
            case 26 =>
              __fmwkType = Some(_input__.readString())
            case 34 =>
              __objectId = Some(_input__.readString())
            case 42 =>
              __value = Some(_input__.readString())
            case tag => _input__.skipField(tag)
          }
        }
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg(
            isNull = __isNull,
            `type` = __type,
            fmwkType = __fmwkType,
            objectId = __objectId,
            value = __value
        )
      }
      def getIsNull: Boolean = isNull.getOrElse(false)
      def clearIsNull: ValueMsg = copy(isNull = None)
      def withIsNull(__v: Boolean): ValueMsg = copy(isNull = Some(__v))
      def getType: String = `type`.getOrElse("")
      def clearType: ValueMsg = copy(`type` = None)
      def withType(__v: String): ValueMsg = copy(`type` = Some(__v))
      def getFmwkType: String = fmwkType.getOrElse("")
      def clearFmwkType: ValueMsg = copy(fmwkType = None)
      def withFmwkType(__v: String): ValueMsg = copy(fmwkType = Some(__v))
      def getObjectId: String = objectId.getOrElse("")
      def clearObjectId: ValueMsg = copy(objectId = None)
      def withObjectId(__v: String): ValueMsg = copy(objectId = Some(__v))
      def getValue: String = value.getOrElse("")
      def clearValue: ValueMsg = copy(value = None)
      def withValue(__v: String): ValueMsg = copy(value = Some(__v))
      def getFieldByNumber(__fieldNumber: Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => isNull.orNull
          case 2 => `type`.orNull
          case 3 => fmwkType.orNull
          case 4 => objectId.orNull
          case 5 => value.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => isNull.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 2 => `type`.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 3 => fmwkType.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 4 => objectId.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 5 => value.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg
  }
  
  object ValueMsg extends com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg(
        __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[Boolean]],
        __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[String]],
        __fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[String]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[Boolean]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[String]]),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[String]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.javaDescriptor.getNestedTypes.get(10)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.scalaDescriptor.nestedMessages(10)
    def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__fieldNumber)
    def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg(
    )
    implicit class ValueMsgLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.ValueMsg](_l) {
      def isNull: _root_.com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.getIsNull)((c_, f_) => c_.copy(isNull = Some(f_)))
      def optionalIsNull: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[Boolean]] = field(_.isNull)((c_, f_) => c_.copy(isNull = f_))
      def `type`: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getType)((c_, f_) => c_.copy(`type` = Some(f_)))
      def optionalType: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
      def fmwkType: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getFmwkType)((c_, f_) => c_.copy(fmwkType = Some(f_)))
      def optionalFmwkType: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.fmwkType)((c_, f_) => c_.copy(fmwkType = f_))
      def objectId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getObjectId)((c_, f_) => c_.copy(objectId = Some(f_)))
      def optionalObjectId: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.objectId)((c_, f_) => c_.copy(objectId = f_))
      def value: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getValue)((c_, f_) => c_.copy(value = Some(f_)))
      def optionalValue: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[String]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val IS_NULL_FIELD_NUMBER = 1
    final val TYPE_FIELD_NUMBER = 2
    final val FMWK_TYPE_FIELD_NUMBER = 3
    final val OBJECT_ID_FIELD_NUMBER = 4
    final val VALUE_FIELD_NUMBER = 5
  }
  
  implicit class TraceMsgContainerLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer](_l) {
    def msg: _root_.com.trueaccord.lenses.Lens[UpperPB, edu.colorado.plv.tracerunner_runtime_instrumentation.tracemsg.TraceMsgContainer.TraceMsg] = field(_.msg)((c_, f_) => c_.copy(msg = f_))
  }
  final val MSG_FIELD_NUMBER = 1
}
